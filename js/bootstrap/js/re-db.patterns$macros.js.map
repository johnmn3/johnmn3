{"version":3,"file":"re-db.patterns$macros.js","sources":["re_db/patterns$macros.cljc"],"mappings":"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","names":["ret__4565__auto__","var_args","args__4534__auto__","len__4531__auto__","i__4532__auto__","argseq__4535__auto__","cljs.core/IndexedSeq","re-db.patterns$macros/capture-patterns","&form","&env","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1","cljs.core/seq","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic","cljs.core/List","cljs.core/vec","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/array-map","cljs.core.concat.cljs$core$IFn$_invoke$arity$0","seq18654","G__18655","cljs.core/first","cljs.core/next","G__18656","self__4518__auto__","body"],"sourcesContent":["(ns re-db.patterns)\n\n(defmacro capture-patterns\n  \"Evaluates body, returning map with evaluation result and read patterns.\"\n  [& body]\n  `(binding [~'re-db.patterns/*pattern-log* {}]\n     (let [{value#     :value\n            tx-report# :tx-report} (~'re-db.core/db-log (do ~@body))\n           patterns# ~'re-db.patterns/*pattern-log*]\n       (~'re-db.core/notify-listeners tx-report#)\n       {:value    value#\n        :patterns patterns#})))"]}