["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","This is intended to be a stable api for those who need programmatic access\n  to the analyzer.","~:file","cljs/analyzer/api.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",22],"~:use-macros",null,"~:excludes",["~#set",["~$find-ns","~$remove-ns","~$ns-publics","~$ns-resolve","~$ns-interns","~$all-ns","~$resolve"]],"~:name","~$cljs.analyzer.api","~:imports",null,"~:requires",["^ ","~$cljs.env","^G","~$env","^G","~$cljs.analyzer","^I","~$ana","^I","~$cljs.core","^K","~$goog","^L"],"~:seen",["^;",["~:require"]],"~:shadow/js-access-global",["^;",["Error"]],"~:uses",null,"~:defs",["^ ","^<",["^ ","~:protocol-inline",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",163,"^6",7,"^7",163,"^8",14,"~:arglists",["~#list",["~$quote",["^T",[["~$sym"],["~$state","^V"]]]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns.","~:top-fn",["^ ","~:variadic",false,"~:max-fixed-arity",2,"~:method-params",["^T",[["^V"],["^W","^V"]]],"^S",["^T",[["^V"],["^W","^V"]]],"~:arglists-meta",["^T",[null,null]]]],"^C","~$cljs.analyzer.api/find-ns","^Y",false,"^4","cljs/analyzer/api.cljc","^8",14,"^X",["^ ","^Y",false,"^Z",2,"^[",["^T",[["^V"],["^W","^V"]]],"^S",["^T",[["^V"],["^W","^V"]]],"^10",["^T",[null,null]]],"^[",["^T",[["^V"],["^W","^V"]]],"~:protocol-impl",null,"^10",["^T",[null,null]],"^6",1,"^5",163,"^7",163,"^Z",2,"~:fn-var",true,"^S",["^T",[["^V"],["^W","^V"]]],"^3","Given a namespace return the corresponding namespace analysis map. Analagous\n  to clojure.core/find-ns."],"^=",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",205,"^6",7,"^7",205,"^8",16,"^S",["^T",["^U",["^T",[["~$ns"],["^W","^14"]]]]],"^3","Removes the namespace named by the symbol.","^X",["^ ","^Y",false,"^Z",2,"^[",["^T",[["^14"],["^W","^14"]]],"^S",["^T",[["^14"],["^W","^14"]]],"^10",["^T",[null,null]]]],"^C","~$cljs.analyzer.api/remove-ns","^Y",false,"^4","cljs/analyzer/api.cljc","^8",16,"^X",["^ ","^Y",false,"^Z",2,"^[",["^T",[["^14"],["^W","^14"]]],"^S",["^T",[["^14"],["^W","^14"]]],"^10",["^T",[null,null]]],"^[",["^T",[["^14"],["^W","^14"]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",205,"^7",205,"^Z",2,"^13",true,"^S",["^T",[["^14"],["^W","^14"]]],"^3","Removes the namespace named by the symbol."],"^>",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",183,"^6",7,"^7",183,"^8",17,"^S",["^T",["^U",["^T",[["^14"],["^W","^14"]]]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars.","^X",["^ ","^Y",false,"^Z",2,"^[",["^T",[["^14"],["^W","^14"]]],"^S",["^T",[["^14"],["^W","^14"]]],"^10",["^T",[null,null]]]],"^C","~$cljs.analyzer.api/ns-publics","^Y",false,"^4","cljs/analyzer/api.cljc","^8",17,"^X",["^ ","^Y",false,"^Z",2,"^[",["^T",[["^14"],["^W","^14"]]],"^S",["^T",[["^14"],["^W","^14"]]],"^10",["^T",[null,null]]],"^[",["^T",[["^14"],["^W","^14"]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",183,"^7",183,"^Z",2,"^13",true,"^S",["^T",[["^14"],["^W","^14"]]],"^3","Given a namespace return all the public var analysis maps. Analagous to\n  clojure.core/ns-publics but returns var analysis maps not vars."],"~$get-options",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",55,"^6",7,"^7",55,"^8",18,"^S",["^T",["^U",["^T",[[],["^W"]]]]],"^3","Return the compiler options from compiler state.","^X",["^ ","^Y",false,"^Z",1,"^[",["^T",[[],["^W"]]],"^S",["^T",[[],["^W"]]],"^10",["^T",[null,null]]]],"^C","~$cljs.analyzer.api/get-options","^Y",false,"^4","cljs/analyzer/api.cljc","^8",18,"^X",["^ ","^Y",false,"^Z",1,"^[",["^T",[[],["^W"]]],"^S",["^T",[[],["^W"]]],"^10",["^T",[null,null]]],"^[",["^T",[[],["^W"]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",55,"^7",55,"^Z",1,"^13",true,"^S",["^T",[[],["^W"]]],"^3","Return the compiler options from compiler state."],"~$warning-enabled?",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",43,"^6",7,"^7",43,"^8",23,"^S",["^T",["^U",["^T",[["~$warning-type"]]]]],"^3","Test if the given warning-type is enabled."],"^C","~$cljs.analyzer.api/warning-enabled?","^Y",false,"^4","cljs/analyzer/api.cljc","^8",23,"^[",["^T",[["^1:"]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",43,"^7",43,"^Z",1,"^13",true,"^S",["^T",["^U",["^T",[["^1:"]]]]],"^3","Test if the given warning-type is enabled."],"^?",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",196,"^6",7,"^7",196,"^8",17,"^S",["^T",["^U",["^T",[["^14","^V"],["^W","^14","^V"]]]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var.","^X",["^ ","^Y",false,"^Z",3,"^[",["^T",[["^14","^V"],["^W","^14","^V"]]],"^S",["^T",[["^14","^V"],["^W","^14","^V"]]],"^10",["^T",[null,null]]]],"^C","~$cljs.analyzer.api/ns-resolve","^Y",false,"^4","cljs/analyzer/api.cljc","^8",17,"^X",["^ ","^Y",false,"^Z",3,"^[",["^T",[["^14","^V"],["^W","^14","^V"]]],"^S",["^T",[["^14","^V"],["^W","^14","^V"]]],"^10",["^T",[null,null]]],"^[",["^T",[["^14","^V"],["^W","^14","^V"]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",196,"^7",196,"^Z",3,"^13",true,"^S",["^T",[["^14","^V"],["^W","^14","^V"]]],"^3","Given a namespace and a symbol return the corresponding var analysis map.\n  Analagous to clojure.core/ns-resolve but returns var analysis map not Var."],"~$empty-state",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",20,"^6",7,"^7",20,"^8",18,"^S",["^T",["^U",["^T",[[]]]]],"^3","Creates an empty compilation state Atom<Map>."],"^C","~$cljs.analyzer.api/empty-state","^Y",false,"^4","cljs/analyzer/api.cljc","^8",18,"^[",["^T",[[]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",20,"^7",20,"^Z",0,"^13",true,"^S",["^T",["^U",["^T",[[]]]]],"^3","Creates an empty compilation state Atom<Map>."],"~$empty-env",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",31,"^6",7,"^7",31,"^8",16,"^S",["^T",["^U",["^T",[[]]]]],"^3","Creates an empty analysis environment."],"^C","~$cljs.analyzer.api/empty-env","^Y",false,"^4","cljs/analyzer/api.cljc","^8",16,"^[",["^T",[[]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",31,"^7",31,"^Z",0,"^13",true,"^S",["^T",["^U",["^T",[[]]]]],"^3","Creates an empty analysis environment."],"~$default-warning-handler",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",48,"^6",7,"^7",48,"^8",30,"^S",["^T",["^U",["^T",[["^1:","^H","~$extra"]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^C","~$cljs.analyzer.api/default-warning-handler","^Y",false,"^4","cljs/analyzer/api.cljc","^8",30,"^[",["^T",[["^1:","^H","^1B"]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",48,"^7",48,"^Z",3,"^13",true,"^S",["^T",["^U",["^T",[["^1:","^H","^1B"]]]]],"^3","The default warning handler.\n\n   Outputs the warning messages to *err*."],"^@",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",172,"^6",7,"^7",172,"^8",17,"^S",["^T",["^U",["^T",[["^14"],["^W","^14"]]]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars.","^X",["^ ","^Y",false,"^Z",2,"^[",["^T",[["^14"],["^W","^14"]]],"^S",["^T",[["^14"],["^W","^14"]]],"^10",["^T",[null,null]]]],"^C","~$cljs.analyzer.api/ns-interns","^Y",false,"^4","cljs/analyzer/api.cljc","^8",17,"^X",["^ ","^Y",false,"^Z",2,"^[",["^T",[["^14"],["^W","^14"]]],"^S",["^T",[["^14"],["^W","^14"]]],"^10",["^T",[null,null]]],"^[",["^T",[["^14"],["^W","^14"]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",172,"^7",172,"^Z",2,"^13",true,"^S",["^T",[["^14"],["^W","^14"]]],"^3","Given a namespace return all the var analysis maps. Analagous to\n  clojure.core/ns-interns but returns var analysis maps not vars."],"^A",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",155,"^6",7,"^7",155,"^8",13,"^S",["^T",["^U",["^T",[[],["^W"]]]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances.","^X",["^ ","^Y",false,"^Z",1,"^[",["^T",[[],["^W"]]],"^S",["^T",[[],["^W"]]],"^10",["^T",[null,null]]]],"^C","~$cljs.analyzer.api/all-ns","^Y",false,"^4","cljs/analyzer/api.cljc","^8",13,"^X",["^ ","^Y",false,"^Z",1,"^[",["^T",[[],["^W"]]],"^S",["^T",[[],["^W"]]],"^10",["^T",[null,null]]],"^[",["^T",[[],["^W"]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",155,"^7",155,"^Z",1,"^13",true,"^S",["^T",[[],["^W"]]],"^3","Return all namespaces. Analagous to clojure.core/all-ns but\n  returns symbols identifying namespaces not Namespace instances."],"^B",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",144,"^6",7,"^7",144,"^8",14,"^S",["^T",["^U",["^T",[["^H","^V"]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"^C","~$cljs.analyzer.api/resolve","^Y",false,"^4","cljs/analyzer/api.cljc","^8",14,"^[",["^T",[["^H","^V"]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",144,"^7",144,"^Z",2,"^13",true,"^S",["^T",["^U",["^T",[["^H","^V"]]]]],"^3","Given an analysis environment resolve a var. Analogous to\n   clojure.core/resolve"],"~$get-js-index",["^ ","^R",null,"^2",["^ ","^4","cljs/analyzer/api.cljc","^5",61,"^6",7,"^7",61,"^8",19,"^S",["^T",["^U",["^T",[[],["^W"]]]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state.","^X",["^ ","^Y",false,"^Z",1,"^[",["^T",[[],["^W"]]],"^S",["^T",[[],["^W"]]],"^10",["^T",[null,null]]]],"^C","~$cljs.analyzer.api/get-js-index","^Y",false,"^4","cljs/analyzer/api.cljc","^8",19,"^X",["^ ","^Y",false,"^Z",1,"^[",["^T",[[],["^W"]]],"^S",["^T",[[],["^W"]]],"^10",["^T",[null,null]]],"^[",["^T",[[],["^W"]]],"^12",null,"^10",["^T",[null,null]],"^6",1,"^5",61,"^7",61,"^Z",1,"^13",true,"^S",["^T",[[],["^W"]]],"^3","Return the currently computed Google Closure js dependency index from the\n  compiler state."]],"~:require-macros",["^ ","^K","^K"],"~:cljs.analyzer/constants",["^ ","^M",["^;",["~:cljs.analyzer/namespaces","~:private","~:macros","~:js-dependency-index","^Q","~:options"]],"~:order",["^1O","^1N","^1K","^1M","^Q","^1L"]],"~:flags",["^ ","^N",["^;",[]]],"~:js-deps",["^ "],"~:deps",["^L","^K","^G","^I"]]