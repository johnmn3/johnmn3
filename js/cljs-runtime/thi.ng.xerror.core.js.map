{"version":3,"file":"thi.ng.xerror.core.js","sources":["thi/ng/xerror/core.cljc"],"mappings":";;AAEA,iCAAA,jCAAMA,0EACKC;AADX,AAEE,MAAqD,KAAAC,MAAWD;;AAElE,qCAAA,rCAAME,kFACHC;AADH,AACM,OAACJ,+BAAO,CAAA,mEAA4BI;;AAE1C,sCAAA,tCAAMC,oFACHC,EAAEC;AADL,AACQ,OAACP,+BAAO,CAAA,gEAAA,HAAsBM,wDAAW,AAACE,wGAAOD;;AAEzD,uCAAA,vCAAME,sFACHC;AADH,AACM,OAACV,+BAAO,CAAA,qEAA8BU;;AAE5C,AAAA,uCAAA,+CAAAC,tFAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,mEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,mEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAX,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,AAAA,qEAAA,rEAAMW,gFACFN;AADJ,AACO,0EAAA,nEAACO,sFAAgCP;;;AADxC,AAAA,qEAAA,rEAAMM,gFAEFZ,IAAIM;AAFR,AAEW,OAACP,+BAAO,kDAAA,LAAKC,sDAASM;;;AAFjC,AAAA,+DAAA,/DAAMM;;AAAN,AAIA,AAAA,uCAAA,+CAAAF,tFAAMK;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC;;;KAAA;AAAA,OAAAA,mEAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAd,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,AAAA,qEAAA,rEAAMc;AAAN,AACM,0EAAA,nEAACC;;;AADP,AAAA,qEAAA,rEAAMD,gFAEMf;AAFZ,AAGG,MAA0D,KAAAC,MAAWD;;;AAHxE,AAAA,+DAAA,/DAAMe;;AAAN","names":["thi.ng.xerror.core/throw!","msg","js/Error","thi.ng.xerror.core/key-error!","k","thi.ng.xerror.core/type-error!","t","x","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","thi.ng.xerror.core/arity-error!","n","var_args","G__34592","thi.ng.xerror.core/illegal-arg!","thi.ng.xerror.core.illegal_arg_BANG_.cljs$core$IFn$_invoke$arity$2","G__34599","thi.ng.xerror.core/unsupported!","thi.ng.xerror.core.unsupported_BANG_.cljs$core$IFn$_invoke$arity$1"],"sourcesContent":["(ns thi.ng.xerror.core)\n\n(defn throw!\n  [^String msg]\n  (throw #?(:clj (IllegalArgumentException. msg) :cljs (js/Error. msg))))\n\n(defn key-error!\n  [k] (throw! (str \"Illegal lookup key: \" k)))\n\n(defn type-error!\n  [t x] (throw! (str \"Can't cast to \" t \" from \" (pr-str x))))\n\n(defn arity-error!\n  [n] (throw! (str \"Wrong number of args: \" n)))\n\n(defn illegal-arg!\n  ([x] (illegal-arg! \"Illegal argument\" x))\n  ([msg x] (throw! (str msg \": \" x))))\n\n(defn unsupported!\n  ([] (unsupported! \"Unsupported operation\"))\n  ([^String msg]\n   (throw #?(:clj (UnsupportedOperationException. msg) :cljs (js/Error. msg)))))\n"]}