{"version":3,"file":"thi.ng.geom.core.utils.js","sources":["thi/ng/geom/core/utils.cljc"],"mappings":"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","names":["thi.ng.geom.core.utils/closest-point-coeff","p","a","b","d","thi.ng.geom.core._.cljs$core$IFn$_invoke$arity$2","thi.ng.geom.core/dot","thi.ng.geom.core/mag-squared","thi.ng.geom.core.utils/closest-point-on-line","thi.ng.geom.core.mix.cljs$core$IFn$_invoke$arity$3","thi.ng.geom.core.utils/closest-point-on-segment","t","thi.ng.geom.core.utils/closest-point-on-segments","segments","cljs.core.transduce.cljs$core$IFn$_invoke$arity$4","p1__38884#","cljs.core.map.cljs$core$IFn$_invoke$arity$1","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","cljs.core.completing.cljs$core$IFn$_invoke$arity$1","q","d'","thi.ng.geom.core/dist-squared","thi.ng.math.core/INF+","thi.ng.geom.core.utils/closest-line-between","a1","b1","a2","b2","p43","cljs.core/not","thi.ng.geom.core.vector/V3","thi.ng.math.core/*eps*","p21","p13","d1343","d4321","d1321","d4343","d2121","thi.ng.math.core.delta_EQ_.cljs$core$IFn$_invoke$arity$3","n","ua","ub","thi.ng.geom.core/madd","thi.ng.geom.core.utils/dist*","rf","c","points","p1__38885#","G__38886","Math/sqrt","thi.ng.geom.core.utils/min-dist","cljs.core/min","thi.ng.geom.core.utils/max-dist","cljs.core/max","thi.ng.geom.core.utils/arc-length-index","thi.ng.dstruct.core.successive_nth.cljs$core$IFn$_invoke$arity$2","p1__38887#","thi.ng.geom.core/dist","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","cljs.core/peek","thi.ng.geom.core.utils/arc-length","thi.ng.dstruct.core.reduce_pairs.cljs$core$IFn$_invoke$arity$3","cljs.core/+","p__38888","vec__38889","seq__38890","cljs.core/seq","first__38891","cljs.core/first","cljs.core/next","thi.ng.geom.core.utils/centroid","x","xs","coll","G__38892","cljs.core/count","thi.ng.geom.core.mix.cljs$core$IFn$_invoke$arity$2","s","f","_","thi.ng.geom.core.reduce_vector.cljs$core$IFn$_invoke$arity$4","var_args","G__38896","thi.ng.geom.core.utils/center","js/Error","c'","thi.ng.geom.core.utils.center.cljs$core$IFn$_invoke$arity$3","p1__38894#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","thi.ng.geom.core._PLUS_.cljs$core$IFn$_invoke$arity$2","G__38900","thi.ng.geom.core.utils/scale-size","thi.ng.geom.core.utils.scale_size.cljs$core$IFn$_invoke$arity$3","p1__38898#","p__38902","vec__38903","seq__38904","first__38905","thi.ng.geom.core.utils/bounds*","zero","thi.ng.geom.core.reduce_vector.cljs$core$IFn$_invoke$arity$3","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","thi.ng.geom.core.utils/bounding-rect","thi.ng.geom.core.vector/V2","thi.ng.geom.core.utils/bounding-box","thi.ng.geom.core.utils/radial-bounds","ctor","r-or-points","cljs.core/coll?","thi.ng.geom.core.utils/axis-bounds","axis","p1__38906#","cljs.core.nth.cljs$core$IFn$_invoke$arity$2","cljs.core.reduce.cljs$core$IFn$_invoke$arity$2","thi.ng.geom.core.utils/axis-range","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/-","thi.ng.geom.core.utils/delta-contains","eps","p1__38907#","cljs.core/some","thi.ng.geom.core.utils/from-barycentric","weights","thi.ng.geom.core/+","cljs.core.map.cljs$core$IFn$_invoke$arity$3","thi.ng.geom.core/*","thi.ng.geom.core.utils/point-at*","idx","total","i","ct","i1","pi","G__38910","thi.ng.geom.core.utils/point-at","thi.ng.geom.core.utils.point_at.cljs$core$IFn$_invoke$arity$3","thi.ng.math.core.in_range_QMARK_.cljs$core$IFn$_invoke$arity$3","cljs.core/last","or__3949__auto__","thi.ng.geom.core.utils/sample-uniform*","udist","include-last?","delta","samples","acc","vec__38912","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","thi.ng.geom.core.utils/sample-uniform","thi.ng.geom.core.utils/sample-segment-with-res","res","include-b?","ls","iter__4324__auto__","s__38919","cljs.core/LazySeq","temp__5457__auto__","cljs.core/chunked-seq?","c__4322__auto__","size__4323__auto__","b__38921","cljs.core/chunk-buffer","i__38920","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__38918","cljs.core/chunk-rest","cljs.core/cons","cljs.core/rest","thi.ng.math.core/norm-range","cljs.core/butlast","p__38923","p__38924","vec__38925","vec__38928","thi.ng.geom.core.utils/map-bilinear","u","v","thi.ng.geom.core.mix.cljs$core$IFn$_invoke$arity$6","p__38931","p__38932","vec__38933","vec__38936","thi.ng.geom.core.utils/map-trilinear","e","g","h","w","G__38941","thi.ng.geom.core.utils/tessellate-with-point","thi.ng.geom.core.utils.tessellate_with_point.cljs$core$IFn$_invoke$arity$2","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","p1__38939#","cljs.core/PersistentVector","thi.ng.geom.core.utils/tessellate-with-first","vec__38943","seq__38944","first__38945","v0","more","p__38946","vec__38947","p__38950","vec__38951","thi.ng.geom.core.utils/tessellate-tri-with-midpoints","ab","bc","ca","thi.ng.geom.core.utils/tessellate-3","pred__38954","expr__38955","cljs.core/=","vec__38957","thi.ng.geom.core.utils.tessellate_with_point.cljs$core$IFn$_invoke$arity$1","thi.ng.geom.core.utils/tessellate-max4","G__38961","thi.ng.geom.core.utils/ortho-normal","p__38962","vec__38963","thi.ng.geom.core.normalize.cljs$core$IFn$_invoke$arity$1","thi.ng.geom.core/cross","p__38967","p__38968","p__38969","vec__38970","vec__38973","vec__38976","thi.ng.geom.core.utils/norm-sign2","ax","ay","bx","by","cx","cy","thi.ng.geom.core.utils/norm-sign3","thi.ng.geom.core/mag","thi.ng.geom.core.utils/tri-area2","thi.ng.geom.core.utils/tri-area3","thi.ng.geom.core.utils/clockwise2?","thi.ng.geom.core.utils/clockwise3?","G__38980","thi.ng.geom.core.utils/triangle-barycentric-coords","p__38981","vec__38982","thi.ng.geom.core.utils.triangle_barycentric_coords.cljs$core$IFn$_invoke$arity$6","uu","vv","uv","wu","wv","denom","thi.ng.geom.core.utils/point-in-triangle2?","thi.ng.geom.core.utils/point-in-triangle3?","thi.ng.geom.core.utils.ortho_normal.cljs$core$IFn$_invoke$arity$2","cl","thi.ng.math.core.delta_EQ_.cljs$core$IFn$_invoke$arity$2","vec__38986","and__3938__auto__","thi.ng.geom.core.utils/tessellating-transducer","cljs.core.comp.cljs$core$IFn$_invoke$arity$2","cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1","thi.ng.geom.core.utils/area-xf","p1__38989#","G__38990","thi.ng.math.core/abs","thi.ng.geom.core.utils/volume-xf","p1__38991#","thi.ng.geom.core.utils/total-area-3d","faces","cljs.core.transduce.cljs$core$IFn$_invoke$arity$3","thi.ng.geom.core.utils/total-volume","cljs.core/chunk-first"],"sourcesContent":["(ns thi.ng.geom.core.utils\n  #?(:cljs\n     (:require-macros\n      [thi.ng.math.macros :as mm]))\n  (:require\n   [thi.ng.geom.core :as g]\n   [thi.ng.geom.core.vector :as v :refer [vec2 vec3 V2 V3]]\n   [thi.ng.dstruct.core :as d]\n   [thi.ng.math.core :as m :refer [*eps*]]\n   [clojure.core.reducers :as r]\n   #?(:clj [thi.ng.math.macros :as mm])))\n\n(declare tri-area3)\n\n(defn closest-point-coeff\n  [p a b]\n  (let [d (g/- b a)]\n    (/ (g/dot (g/- p a) d) (g/mag-squared d))))\n\n(defn closest-point-on-line\n  [p a b]\n  (g/mix a b (closest-point-coeff p a b)))\n\n(defn closest-point-on-segment\n  [p a b]\n  (let [t (closest-point-coeff p a b)]\n    (if (<= t 0.0) a (if (>= t 1.0) b (g/mix a b t)))))\n\n(defn closest-point-on-segments\n  [p segments]\n  (transduce\n   (map #(apply closest-point-on-segment p %))\n   (completing\n    (fn [a q]\n      (let [d' (g/dist-squared p q)]\n        (if (< d' (a 1)) [q d'] a))))\n   [nil m/INF+]\n   segments))\n\n(defn closest-line-between\n  [a1 b1 a2 b2]\n  (let [p43 (g/- b2 a2)]\n    (if-not (m/delta= V3 p43 *eps*)\n      (let [p21 (g/- b1 a1)]\n        (if-not (m/delta= V3 p21 *eps*)\n          (let [p13   (g/- a1 a2)\n                d1343 (g/dot p13 p43)\n                d4321 (g/dot p43 p21)\n                d1321 (g/dot p13 p21)\n                d4343 (g/dot p43 p43)\n                d2121 (g/dot p21 p21)\n                d     (mm/msub d2121 d4343 d4321 d4321)]\n            (if (m/delta= 0.0 d *eps*)\n              {:type :parallel}\n              (let [n  (mm/msub d1343 d4321 d1321 d4343)\n                    ua (/ n d)\n                    ub (/ (mm/madd d4321 ua d1343) d4343)]\n                {:type :intersect\n                 :a    (g/madd p21 ua a1)\n                 :b    (g/madd p43 ub a2)\n                 :ua   ua\n                 :ub   ub}))))))))\n\n(defn dist*\n  [rf]\n  (fn [c points]\n    (->> points\n         (transduce (map #(g/dist-squared c %)) rf 0)\n         (Math/sqrt))))\n\n(def min-dist (dist* min))\n(def max-dist (dist* max))\n\n(defn arc-length-index\n  [points]\n  (->> points\n       (d/successive-nth 2)\n       (transduce\n        (map #(g/dist (% 0) (% 1)))\n        (completing (fn [a d] (conj a (+ (peek a) d))))\n        [0])))\n\n(defn arc-length\n  [points]\n  (d/reduce-pairs + g/dist points))\n\n(defn centroid\n  [[x & xs :as coll]]\n  (case (count coll)\n    0 nil\n    1 x\n    2 (g/mix x (first xs))\n    (let [s (/ 1.0 (count coll))\n          f (fn [x _] (* x s))]\n      (g/reduce-vector x + f xs))))\n\n(defn center\n  ([c' coll]\n     (center (centroid coll) c' coll))\n  ([c c' coll]\n     (let [d (g/- c' c)] (mapv #(g/+ % d) coll))))\n\n(defn scale-size\n  ([s coll] (scale-size (centroid coll) s coll))\n  ([c s coll] (mapv #(g/madd (g/- % c) s c) coll)))\n\n(defn bounds*\n  [zero [x & xs :as coll]]\n  (let [c (count coll)]\n    (cond\n     (> c 1) (let [p (g/reduce-vector x min xs)\n                   q (g/reduce-vector x max xs)]\n               [p (g/- q p)])\n     (= c 1) [x zero]\n     :default nil)))\n\n(defn bounding-rect\n  [points]\n  (bounds* V2 points))\n\n(defn bounding-box\n  [points]\n  (bounds* V3 points))\n\n(defn radial-bounds\n  [ctor c r-or-points]\n  [(ctor c)\n   (if (coll? r-or-points)\n     (max-dist c r-or-points)\n     r-or-points)])\n\n(defn axis-bounds\n  [axis coll]\n  (let [xs (mapv #(nth % axis) coll)]\n    [(reduce min xs) (reduce max xs)]))\n\n(defn axis-range\n  [axis coll]\n  (- (apply - (axis-bounds axis coll))))\n\n(defn delta-contains\n  [points p eps]\n  (some #(m/delta= p % eps) points))\n\n(defn from-barycentric\n  [points weights]\n  (reduce g/+ (map g/* points weights)))\n\n(defn point-at*\n  [points idx total t i]\n  (let [ct (* t total)\n        i (int (loop [i i] (if (>= ct (idx i)) (recur (inc i)) i)))\n        i1 (dec i)\n        pi (idx i1)]\n    [(g/mix (nth points i1) (nth points i)\n            (mm/subdiv ct pi (idx i) pi))\n     i]))\n\n(defn point-at\n  ([t points] (point-at t points nil))\n  ([t points idx]\n     (when (m/in-range? 0.0 1.0 t)\n       (let [n (count points)\n             t (double t)]\n         (cond\n          (== 0 n) nil\n          (== 1 n) (first points)\n          (== 1.0 t) (last points)\n          :default\n          (let [idx (or idx (arc-length-index points))]\n            (first (point-at* points idx (peek idx) t 1))))))))\n\n(defn sample-uniform*\n  [udist include-last? points]\n  (let [idx (arc-length-index points)\n        total (peek idx)\n        delta (/ udist total)\n        samples (loop [t 0.0, i 1, acc []]\n                  (if (< t 1.0)\n                    (let [[p i] (point-at* points idx total t i)]\n                      (recur (+ t delta) (int i) (conj acc p)))\n                    acc))]\n    (if include-last?\n      (conj samples (last points))\n      samples)))\n\n(defn sample-uniform\n  [udist include-last? points]\n  (let [n (count points)]\n    (cond\n     (== 0 n) nil\n     (== 1 n) [(first points)]\n     :default (sample-uniform* udist include-last? points))))\n\n(defn sample-segment-with-res\n  [a b res include-b?]\n  (let [ls (for [t (m/norm-range res)] (g/mix a b t))]\n    (if include-b? ls (butlast ls))))\n\n(defn map-bilinear\n  \"Takes a seq of 4 points in ccw order and 2D vector of normalized UV\n  coordinates. Applies bilinear interpolation to compute point within\n  the rect: U is coord along AB/DC edge, V along BC/AD\"\n  [[a b c d] [u v]]\n  (g/mix a b d c u v))\n(defn map-trilinear\n  \"Takes a seq of 8 points defining a cuboid and vector of normalized\n  UVW coordinates. Applies trilinear interpolation to compute point\n  within the cuboid: U is coord along AD/BC edge, V along AE/BF, W\n  along AB/DC (see above diagram)\"\n  [[a b c d e f g h] [u v w]]\n  (g/mix (g/mix a d e h u v) (g/mix b c f g u v) w))\n\n(defn tessellate-with-point\n  ([points] (tessellate-with-point (centroid points) points))\n  ([c points]\n     (->> [(first points)]\n          (concat points)\n          (d/successive-nth 2)\n          (mapv #(vector c (% 0) (% 1))))))\n\n(defn tessellate-with-first\n  [points]\n  (if (> (count points) 3)\n    (let [[v0 & more] points]\n      (mapv (fn [[a b]] [v0 a b]) (d/successive-nth 2 more)))\n    [points]))\n\n(defn tessellate-tri-with-midpoints\n  [[a b c]]\n  (let [ab (g/mix a b)\n        bc (g/mix b c)\n        ca (g/mix c a)]\n    [[a ab ca] [ab b bc] [bc c ca] [ab bc ca]]))\n\n(defn tessellate-3\n  [points]\n  (condp = (count points)\n    3 [points]\n    4 (let [[a b c d] points] [[a b c] [a c d]])\n    (tessellate-with-point points)))\n\n(defn tessellate-max4\n  [points]\n  (if (<= (count points) 4)\n    [points]\n    (tessellate-with-point points)))\n\n(defn ortho-normal\n  ([[a b c]] (g/normalize (g/cross (g/- b a) (g/- c a))))\n  ([a b] (g/normalize (g/cross a b)))\n  ([a b c] (g/normalize (g/cross (g/- b a) (g/- c a)))))\n\n(defn norm-sign2\n  [[ax ay] [bx by] [cx cy]]\n  (- (mm/subm bx ax cy ay) (mm/subm cx ax by ay)))\n\n(defn norm-sign3\n  [a b c] (g/mag (g/cross (g/- b a) (g/- c a))))\n\n(defn tri-area2\n  [a b c] (* 0.5 (norm-sign2 a b c)))\n\n(defn tri-area3\n  [a b c] (* 0.5 (norm-sign3 a b c)))\n\n(defn clockwise2?\n  [a b c] (neg? (norm-sign2 a b c)))\n\n(defn clockwise3?\n  [a b c n] (pos? (g/dot (g/cross (g/- b a) (g/- c a)) n)))\n\n(defn triangle-barycentric-coords\n  ([[a b c] p]\n     (triangle-barycentric-coords a b c p (g/- b a) (g/- c a)))\n  ([a b c p]\n     (triangle-barycentric-coords a b c p (g/- b a) (g/- c a)))\n  ([a b c p u v]\n     (let [w (g/- p a)\n           uu (g/mag-squared u)\n           vv (g/mag-squared v)\n           uv (g/dot u v)\n           wu (g/dot w u)\n           wv (g/dot w v)\n           denom (/ 1.0 (mm/msub uv uv uu vv))\n           s (* denom (mm/msub uv wv vv wu))\n           t (* denom (mm/msub uv wu uu wv))]\n       [(- 1.0 (+ s t)) s t])))\n\n(defn point-in-triangle2?\n  [p a b c]\n  (if (clockwise2? a b c)\n    (and (>= (norm-sign2 a c p) 0.0)\n         (>= (norm-sign2 b a p) 0.0)\n         (>= (norm-sign2 c b p) 0.0))\n    (and (>= (norm-sign2 b c p) 0.0)\n         (>= (norm-sign2 a b p) 0.0)\n         (>= (norm-sign2 c a p) 0.0))))\n\n(defn point-in-triangle3?\n  [p a b c]\n  (let [u (g/- b a)\n        v (g/- c a)\n        n (ortho-normal u v)\n        cl (- (g/dot n p) (g/dot n a))]\n    (if (m/delta= 0.0 cl)\n      (let [[u v w] (triangle-barycentric-coords a b c p u v)]\n        (and (>= u 0.0) (>= w 0.0) (m/in-range? 0.0 1.0 v))))))\n\n(defn- tessellating-transducer\n  [f]\n  (comp\n   (mapcat tessellate-with-first)\n   (map f)))\n\n(def ^:private area-xf\n  (tessellating-transducer #(->> % (apply tri-area3) m/abs)))\n\n(def ^:private volume-xf\n  (tessellating-transducer #(g/dot (% 0) (g/cross (% 1) (% 2)))))\n\n(defn total-area-3d\n  [faces] (transduce area-xf + faces))\n\n(defn total-volume\n  [faces] (/ (transduce volume-xf + faces) 6.0))\n"]}