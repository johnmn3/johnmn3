["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/tools/reader/impl/utils.cljs","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",33],"~:use-macros",null,"~:excludes",["~#set",["~$char"]],"~:name","~$cljs.tools.reader.impl.utils","~:imports",null,"~:requires",["^ ","~$clojure.string","^@","~$string","^@","~$goog.string","^B","~$gstring","^B","~$cljs.core","^D","~$goog","^E"],"~:seen",["^:",["~:require"]],"~:shadow/js-access-global",["^:",["isNaN","parseInt"]],"~:uses",null,"~:defs",["^ ","~$reader-conditional",["^ ","~:protocol-inline",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",29,"^5",7,"^6",29,"^7",25,"~:arglists",["~#list",["~$quote",["^N",[["~$form","~$splicing?"]]]]],"~:doc","Construct a data representation of a reader conditional.\n  If true, splicing? indicates read-cond-splicing."],"^<","~$cljs.tools.reader.impl.utils/reader-conditional","~:variadic",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",25,"~:method-params",["^N",[["^P","^Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^5",1,"^4",29,"^6",29,"~:max-fixed-arity",2,"~:fn-var",true,"^M",["^N",["^O",["^N",[["^P","^Q"]]]]],"^R","Construct a data representation of a reader conditional.\n  If true, splicing? indicates read-cond-splicing."],"~$whitespace?",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",43,"^5",16,"^6",43,"^7",27,"~:tag","~$boolean","^M",["^N",["^O",["^N",[["~$ch"]]]]],"^R","Checks whether a given character is whitespace"],"^<","~$cljs.tools.reader.impl.utils/whitespace?","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",27,"^U",["^N",[["^11"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^4",43,"~:ret-tag","^10","^6",43,"^X",1,"^[","^10","^Y",true,"^M",["^N",["^O",["^N",[["^11"]]]]],"^R","Checks whether a given character is whitespace"],"~$char-code",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",99,"^5",7,"^6",99,"^7",16,"^M",["^N",["^O",["^N",[["^11","~$base"]]]]]],"^<","~$cljs.tools.reader.impl.utils/char-code","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",16,"^U",["^N",[["^11","^15"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^4",99,"^6",99,"^X",2,"^Y",true,"^M",["^N",["^O",["^N",[["^11","^15"]]]]]],"~$last-id",["^ ","^<","~$cljs.tools.reader.impl.utils/last-id","^3","cljs/tools/reader/impl/utils.cljs","^4",73,"^5",1,"^6",73,"^7",13,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",73,"^5",6,"^6",73,"^7",13],"^[","~$any"],"^;",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",15,"^5",7,"^6",15,"^7",11,"^M",["^N",["^O",["^N",[["~$x"]]]]]],"^<","~$cljs.tools.reader.impl.utils/char","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",11,"^U",["^N",[["~$x"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^4",15,"^6",15,"^X",1,"^Y",true,"^M",["^N",["^O",["^N",[["~$x"]]]]]],"~$numeric?",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",51,"^5",16,"^6",51,"^7",24,"^[","^10","^M",["^N",["^O",["^N",[["^11"]]]]],"^R","Checks whether a given character is numeric"],"^<","~$cljs.tools.reader.impl.utils/numeric?","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",24,"^U",["^N",[["^11"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^4",51,"^13","^10","^6",51,"^X",1,"^[","^10","^Y",true,"^M",["^N",["^O",["^N",[["^11"]]]]],"^R","Checks whether a given character is numeric"],"~$ReaderConditional",["^ ","~:num-fields",2,"~:protocols",["^:",["~$cljs.core/IRecord","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^<","~$cljs.tools.reader.impl.utils/ReaderConditional","^3","cljs/tools/reader/impl/utils.cljs","^7",29,"~:type",true,"^5",12,"~:internal-ctor",true,"^4",22,"~:record",true,"^6",22,"^[","~$function","~:skip-protocol-flag",["^:",["^1@","^1A","^1B","^1C","^1D","^1E","^1F","^1G","^1H","^1I","^1J","^1K","^1L","^1M"]]],"~$second'",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",96,"^5",7,"^6",96,"^7",14,"^M",["^N",["^O",["^N",[[["~$a","~$b"]]]]]]],"^<","~$cljs.tools.reader.impl.utils/second'","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",14,"^U",["^N",[["~$p__16278"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^4",96,"^6",96,"^X",1,"^Y",true,"^M",["^N",["^O",["^N",[[["~$a","~$b"]]]]]]],"~$desugar-meta",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",64,"^5",7,"^6",64,"^7",19,"^M",["^N",["^O",["^N",[["~$f"]]]]],"^R","Resolves syntactical sugar in metadata"],"^<","~$cljs.tools.reader.impl.utils/desugar-meta","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",19,"^U",["^N",[["~$f"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^4",64,"^6",64,"^X",1,"^Y",true,"^M",["^N",["^O",["^N",[["~$f"]]]]],"^R","Resolves syntactical sugar in metadata"],"~$->ReaderConditional",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^7",29,"^5",12,"^1P",true,"~:factory","~:positional","^4",22,"^6",22,"^M",["^N",["^O",["^N",[["^Q","^P"]]]]],"^R","Positional factory function for cljs.tools.reader.impl.utils/ReaderConditional."],"^<","~$cljs.tools.reader.impl.utils/->ReaderConditional","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",29,"^U",["^N",[["^Q","^P"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^1P",true,"^1Z","^1[","^4",22,"^6",22,"^X",2,"^Y",true,"^M",["^N",["^O",["^N",[["^Q","^P"]]]]],"^R","Positional factory function for cljs.tools.reader.impl.utils/ReaderConditional."],"~$next-id",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",75,"^5",7,"^6",75,"^7",14,"^M",["^N",["^O",["^N",[[]]]]]],"^<","~$cljs.tools.reader.impl.utils/next-id","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",14,"^U",["^N",[[]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^4",75,"^6",75,"^X",0,"^Y",true,"^M",["^N",["^O",["^N",[[]]]]]],"~$map->ReaderConditional",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^7",29,"^5",12,"^1P",true,"^1Z","~:map","^4",22,"^6",22,"^M",["^N",["^O",["^N",[["~$G__16094"]]]]],"^R","Factory function for cljs.tools.reader.impl.utils/ReaderConditional, taking a map of keywords to field values."],"^<","~$cljs.tools.reader.impl.utils/map->ReaderConditional","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",29,"^U",["^N",[["^25"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^1P",true,"^1Z","^24","^4",22,"^6",22,"^X",1,"^Y",true,"^M",["^N",["^O",["^N",[["^25"]]]]],"^R","Factory function for cljs.tools.reader.impl.utils/ReaderConditional, taking a map of keywords to field values."],"~$ex-info?",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",19,"^5",16,"^6",19,"^7",24,"^[","^10","^M",["^N",["^O",["^N",[["~$ex"]]]]]],"^<","~$cljs.tools.reader.impl.utils/ex-info?","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",24,"^U",["^N",[["^28"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^4",19,"^13","^10","^6",19,"^X",1,"^[","^10","^Y",true,"^M",["^N",["^O",["^N",[["^28"]]]]]],"~$reader-conditional?",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",24,"^5",16,"^6",24,"^7",35,"^[","^10","^M",["^N",["^O",["^N",[["~$value"]]]]],"^R","Return true if the value is the data representation of a reader conditional"],"^<","~$cljs.tools.reader.impl.utils/reader-conditional?","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",35,"^U",["^N",[["^2;"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^4",24,"^13","^10","^6",24,"^X",1,"^[","^10","^Y",true,"^M",["^N",["^O",["^N",[["^2;"]]]]],"^R","Return true if the value is the data representation of a reader conditional"],"~$newline?",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",57,"^5",16,"^6",57,"^7",24,"^[","^10","^M",["^N",["^O",["^N",[["~$c"]]]]],"^R","Checks whether the character is a newline"],"^<","~$cljs.tools.reader.impl.utils/newline?","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",24,"^U",["^N",[["~$c"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^4",57,"^13","^10","^6",57,"^X",1,"^[","^10","^Y",true,"^M",["^N",["^O",["^N",[["~$c"]]]]],"^R","Checks whether the character is a newline"],"~$namespace-keys",["^ ","^L",null,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",79,"^5",7,"^6",79,"^7",21,"^M",["^N",["^O",["^N",[["~$ns","~$keys"]]]]]],"^<","~$cljs.tools.reader.impl.utils/namespace-keys","^T",false,"^3","cljs/tools/reader/impl/utils.cljs","^7",21,"^U",["^N",[["^2@","^2A"]]],"^V",null,"^W",["^N",[null,null]],"^5",1,"^4",79,"^6",79,"^X",2,"^Y",true,"^M",["^N",["^O",["^N",[["^2@","^2A"]]]]]],"~$ws-rx",["^ ","^<","~$cljs.tools.reader.impl.utils/ws-rx","^3","cljs/tools/reader/impl/utils.cljs","^4",41,"^5",1,"^6",41,"^7",11,"^2",["^ ","^3","cljs/tools/reader/impl/utils.cljs","^4",41,"^5",6,"^6",41,"^7",11],"^[","^19"]],"~:require-macros",["^ ","^D","^D"],"~:cljs.analyzer/constants",["^ ","^F",["^:",["^P","~:else","~:splicing?","^Q","~:form","^["]],"~:order",["^2H","^2I","^Q","^P","^[","^2G"]],"~:flags",["^ ","^G",["^:",[]]],"~:js-deps",["^ "],"~:deps",["^E","^D","^@","^B"]]