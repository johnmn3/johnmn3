{"version":3,"file":"cells.eval_context.js","sources":["cells/eval_context.cljs"],"mappings":"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","names":["x__4243__auto__","m__4244__auto__","cells/eval-context.on-dispose","goog/typeOf","cljs.core/missing-protocol","cells/eval-context.-dispose!","cells.eval-context/IDispose","cells.eval-context/on-dispose","context","f","cells.eval-context/-dispose!","cells.eval-context/dispose!","value","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","cells/eval-context.handle-error","cells.eval-context/IHandleError","cells.eval-context/handle-error","this","e","cells.eval-context/new-context","-context-state","cljs.core/volatile!","js/cells","js/cells.eval-context","js/cells.eval-context.t_cells$eval_context33667","cells.eval-context/t_cells$eval_context33667","_33669","meta33668","this__4192__auto__","writer__4193__auto__","opt__4194__auto__","cljs.core/-write","cells.eval-context/->t_cells$eval_context33667","cljs.core/-vreset!","cljs.core/-deref","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core/conj","seq__33679","cljs.core/seq","chunk__33680","count__33681","i__33682","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","cljs.core/deref","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core/empty"],"sourcesContent":["(ns cells.eval-context)\n\n(defprotocol IDispose\n  \"Cells are designed to be used within interactive interfaces where users re-evaluate\n   code frequently. Implement the IDispose protocol on an editor context to control the\n    'disposal' of side-effects like intervals when code is (re)-evaluated.\"\n  (on-dispose [context f] \"Register a callback to be fired when context is disposed.\")\n  (-dispose! [context]))\n\n(defn dispose! [value]\n  (when (satisfies? IDispose value)\n    (-dispose! value)))\n\n(defprotocol IHandleError\n  (handle-error [this e]))\n\n(defn new-context []\n  (let [-context-state (volatile! {:dispose-fns #{}})]\n    (reify\n      IDispose\n      (on-dispose [context f]\n        (vswap! -context-state update :dispose-fns conj f))\n      (-dispose! [context]\n        (doseq [f (:dispose-fns @-context-state)]\n          (f))\n        (vswap! -context-state update :dispose-fns empty))\n      IHandleError\n      (handle-error [this e] (throw e)))))"]}