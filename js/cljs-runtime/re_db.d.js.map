{"version":3,"file":"re_db.d.js","sources":["re_db/d.cljs"],"mappings":";;;AAKA,GAAA,QAAAA,kCAAAC,oCAAAC;AAAA;AAAA,AAAA,AAAmBC,yBAAK,gDAAA,hDAACC;;AAEzB;;;wBAAA,xBAAMC,wDAEHC,EAAEC;AAFL,AAGE;mCAAOC;AAAP,AACE,uDAAA,AAAAC,hDAACC,8CAAMJ,kBAAGC,GAAEC;;;IADPA;;;;EAAAA;;oCAAAA;;;IAAAA;0BAAAA;;;;;;;AAGT,AAAKG,iBAAO,AAACN,sBAAcO,kBAAST;AACpC,AAAKU,cAAI,AAACR,sBAAcS,eAAMX;AAC9B,AAAKY,iBAAO,AAACV,sBAAcW,kBAASb;AACpC,AAAKc,sBAAY,AAACZ,sBAAca,uBAAcf;AAE9C,AAAKgB,qBAAW,AAACd,sBAAce,sBAAajB;AAC5C,AAAKkB,mBAAS,AAAChB,sBAAciB,oBAAWnB;AAExC,AAAKoB,0BAAU,AAAClB,sBAAcmB,2BAAYrB;AAC1C,AAAKsB,gBAAM,AAACpB,sBAAcqB,iBAAQvB;AAElC,AAAKwB,yBAAU,AAACC,gDAAQC,0BAAY1B;AACpC,AAAK2B,iBAAO,AAACF,gDAAQG,kBAAS5B;AAC9B,AAAK6B,mBAAS,AAACJ,gDAAQK,oBAAW9B;AAClC,AAAK+B,6BAAc,AAACN,gDAAQO,8BAAgBhC;AAE5C,AAAKiC,oBAAUC","names":["js/re-db","js/re-db.d","js/re-db.d.*db*","re-db.d/*db*","re_db.core.create.cljs$core$IFn$_invoke$arity$1","re-db.d/partial-deref","f","a","args","cljs.core/deref","cljs.core.apply.cljs$core$IFn$_invoke$arity$3","re-db.d/entity","re-db.core/entity","re-db.d/get","re-db.core/get","re-db.d/get-in","re-db.core/get-in","re-db.d/select-keys","re-db.core/select-keys","re-db.d/entity-ids","re-db.core/entity-ids","re-db.d/entities","re-db.core/entities","re-db.d/contains?","re-db.core/contains?","re-db.d/touch","re-db.core/touch","re-db.d/transact!","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","re-db.core/transact!","re-db.d/listen","re-db.core/listen","re-db.d/unlisten","re-db.core/unlisten","re-db.d/merge-schema!","re-db.core/merge-schema!","re-db.d/unique-id","re-db.core/unique-id"],"sourcesContent":["(ns re-db.d\n  (:refer-clojure :exclude [get get-in contains? select-keys namespace])\n  (:require [re-db.core :as d])\n  (:require-macros [re-db.d]))\n\n(defonce ^:dynamic *db* (d/create {}))\n\n(defn partial-deref\n  \"Partially apply a (an atom) to f, but deref the atom at time of application.\"\n  [f a]\n  (fn [& args]\n    (apply f @a args)))\n\n(def entity (partial-deref d/entity *db*))\n(def get (partial-deref d/get *db*))\n(def get-in (partial-deref d/get-in *db*))\n(def select-keys (partial-deref d/select-keys *db*))\n\n(def entity-ids (partial-deref d/entity-ids *db*))\n(def entities (partial-deref d/entities *db*))\n\n(def contains? (partial-deref d/contains? *db*))\n(def touch (partial-deref d/touch *db*))\n\n(def transact! (partial d/transact! *db*))\n(def listen (partial d/listen *db*))\n(def unlisten (partial d/unlisten *db*))\n(def merge-schema! (partial d/merge-schema! *db*))\n\n(def unique-id d/unique-id)"]}