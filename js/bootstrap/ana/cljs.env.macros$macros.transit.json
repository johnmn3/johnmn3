["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/env/macros$macros.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",20],"~:use-macros",null,"~:excludes",["~#set",["~$ensure","~$binding"]],"~:name","~$cljs.env.macros$macros","~:imports",null,"~:requires",["^ ","~$cljs.core","^A","~$goog","^B"],"~:seen",["^:",[]],"~:uses",null,"~:defs",["^ ","~$with-compiler-env",["^ ","~:protocol-inline",null,"^2",["^ ","^3","cljs/env/macros$macros.cljc","^7",28,"~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",3,"~:method-params",[["~#list",["~$&form","~$&env","~$env","~$body"]]],"~:arglists",["^L",[["^M","^N","^O","~$&","^P"]]],"~:arglists-meta",["^L",[null]]],"^5",11,"^4",12,"~:macro",true,"^6",12,"^Q",["^L",["~$quote",["^L",[["^O","~$&","^P"]]]]],"~:doc","Evaluates [body] with [env] bound as the value of the `*compiler*` var in\n this namespace."],"^=","~$cljs.env.macros$macros/with-compiler-env","^I",true,"^3","cljs/env/macros$macros.cljc","^7",28,"^H",["^ ","^I",true,"^J",3,"^K",[["^L",["^M","^N","^O","^P"]]],"^Q",["^L",[["^M","^N","^O","~$&","^P"]]],"^R",["^L",[null]]],"^K",[["^L",["^M","^N","^O","^P"]]],"~:protocol-impl",null,"^R",["^L",[null]],"^5",1,"^4",12,"^S",true,"^6",12,"^J",3,"~:fn-var",false,"^Q",["^L",[["^M","^N","^O","~$&","^P"]]],"^U","Evaluates [body] with [env] bound as the value of the `*compiler*` var in\n this namespace."],"^;",["^ ","^G",null,"^2",["^ ","^3","cljs/env/macros$macros.cljc","^4",28,"^5",11,"^6",28,"^7",17,"^S",true,"^Q",["^L",["^T",["^L",[["~$&","^P"]]]]],"^H",["^ ","^I",true,"^J",2,"^K",[["^L",["^M","^N","^P"]]],"^Q",["^L",[["^M","^N","~$&","^P"]]],"^R",["^L",[null]]]],"^=","~$cljs.env.macros$macros/ensure","^I",true,"^3","cljs/env/macros$macros.cljc","^7",17,"^H",["^ ","^I",true,"^J",2,"^K",[["^L",["^M","^N","^P"]]],"^Q",["^L",[["^M","^N","~$&","^P"]]],"^R",["^L",[null]]],"^K",[["^L",["^M","^N","^P"]]],"^W",null,"^R",["^L",[null]],"^5",1,"^4",28,"^S",true,"^6",28,"^J",2,"^X",false,"^Q",["^L",[["^M","^N","~$&","^P"]]]]],"~:require-macros",["^ ","^A","^A"],"~:cljs.analyzer/constants",["^ ","^C",["^:",["~$try","~$env__18983__auto__","~$cljs.core/binding","~$clojure.core/let","~$clojure.core/and","~$cljs.env/default-compiler-env","~$finally","~:default","~$val__19002__auto__","~$clojure.core/type","~$clojure.core/instance?","~$cljs.env/*compiler*","~$clojure.core/map?","~$clojure.core/str","~$clojure.core/when","~$clojure.core/deref","~$set!","~$cljs.core/Atom","~$java.lang.Error.","~$clojure.core/nil?","~$clojure.core/atom","~$clojure.core/cond","~$throw"]],"~:order",["^13","^11","^1E","^1<","^1D","^14","^1:","^1A","^1?","^17","^1F","^1B","^1=","^19","^12","^1;","^18","^1>","^1C","^1@","^15","^10","^16"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^B","^A"]]