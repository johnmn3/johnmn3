{"version":3,"file":"re_view.render_loop.js","sources":["re_view/render_loop.cljs"],"mappings":"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","names":["js/re-view","js/re-view.render-loop","js/re-view.render-loop.*immediate-state-update*","re-view.render-loop/*immediate-state-update*","js/re-view.render-loop.count-fps?","re-view.render-loop/count-fps?","js/re-view.render-loop.last-fps-time","re-view.render-loop/last-fps-time","js/re-view.render-loop.frame-rate","re-view.render-loop/frame-rate","js/re-view.render-loop.frame-count","re-view.render-loop/frame-count","re-view.render-loop/count-fps!","enable?","js/re-view.render-loop._raf-polyfill","re-view.render-loop/_raf-polyfill","cljs.core/not","js/window","or__3949__auto__","cb","js/setTimeout","js/re-view.render-loop.to-render","re-view.render-loop/to-render","cljs.core/volatile!","js/re-view.render-loop.to-run","re-view.render-loop/to-run","re-view.render-loop/schedule!","f","cljs.core/-vreset!","cljs.core/-deref","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","re-view.render-loop/request-render","re-view.render-loop/force-update-caught","this","e32827","js/Error","e","temp__5455__auto__","catch-fn","js/console","re-view.render-loop/force-update!","cljs.core.disj.cljs$core$IFn$_invoke$arity$2","re-view.render-loop/force-update","re-view.render-loop/flush!","cljs.core/deref","cljs.core/empty?","components","cljs.core/vreset!","seq__32848","cljs.core/seq","chunk__32849","count__32851","i__32852","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","c","fns","seq__32862","chunk__32863","count__32864","i__32865","re-view.render-loop/render-loop","frame-ms","cljs.core/mod","js/requestAnimationFrame","re-view.render-loop/apply-sync!","args","result","cljs.core.apply.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns re-view.render-loop\n  (:require [goog.object :as gobj]))\n\n(set! *warn-on-infer* true)\n(defonce ^:dynamic *immediate-state-update* false)\n\n(defonce ^:private count-fps? false)\n(defonce ^:private last-fps-time 1)\n(defonce frame-rate 0)\n(defonce frame-count 0)\n\n(defn count-fps!\n  [enable?]\n  (set! count-fps? enable?))\n\n(defonce _raf-polyfill\n         (when (js* \"typeof window !== 'undefined'\")\n           (if-not (.-requestAnimationFrame js/window)\n             (set! (.-requestAnimationFrame js/window)\n                   (or\n                     (.-webkitRequestAnimationFrame js/window)\n                     (.-mozRequestAnimationFrame js/window)\n                     (.-oRequestAnimationFrame js/window)\n                     (.-msRequestAnimationFrame js/window)\n                     (fn [cb]\n                       (js/setTimeout cb (/ 1000 60))))))))\n\n(defonce to-render (volatile! #{}))\n(defonce to-run (volatile! []))\n\n(declare request-render)\n\n(defn schedule! [f]\n  (vswap! to-run conj f)\n  (request-render))\n\n(defn force-update-caught [this]\n  (when-not (true? (aget this \"unmounted\"))\n    (try (.forceUpdate this)\n         (catch js/Error e\n           (if-let [catch-fn (aget this \"catch\")]\n             (catch-fn e)\n             (do (.debug js/console \"No :catch method in component: \" this)\n                 (.error js/console e)))))))\n\n(defn force-update! [^js/React.Component this]\n  (vswap! to-render disj this)\n  (force-update-caught this))\n\n(defn force-update [this]\n  (if (true? *immediate-state-update*)\n    (force-update! this)\n    (do\n      (vswap! to-render conj this)\n      (request-render))))\n\n(defn flush!\n  []\n  (when-not ^boolean (empty? @to-render)\n    (let [components @to-render]\n      (vreset! to-render #{})\n      (doseq [c components]\n        (force-update-caught c))))\n\n  (when-not ^boolean (empty? @to-run)\n    (let [fns @to-run]\n      (vreset! to-run [])\n      (doseq [f fns] (f)))))\n\n(defn render-loop\n  [frame-ms]\n  (set! frame-count (inc frame-count))\n  (when ^boolean (and (true? count-fps?) (identical? 0 (mod frame-count 29)))\n    (set! frame-rate (* 1000 (/ 30 (- frame-ms last-fps-time))))\n    (set! last-fps-time frame-ms))\n  (flush!))\n\n(defn request-render []\n  (js/requestAnimationFrame render-loop))\n\n\n(defn apply-sync!\n  \"Wraps function `f` to flush the render loop before returning.\"\n  [f]\n  (fn [& args]\n    (let [result (apply f args)]\n      (flush!)\n      result)))"]}