{"version":3,"file":"re_view.hiccup.core.js","sources":["re_view/hiccup/core.cljs"],"mappings":"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","names":["js/Symbol","re-view.hiccup.core/-to-element","form","cljs.core/vector?","re-view.hiccup.hiccup/*create-element*","or__3949__auto__","create-element","js/Error","e","tag","id","props","classes","re-view.hiccup.hiccup/reduce-flatten-seqs","children","args","re-view.hiccup.hiccup/props->js","wrap-props","cljs.core/list?","e15408","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","out","el","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","re-view.hiccup.core/IElement","x__4243__auto__","m__4244__auto__","re-view/hiccup.core.to-element","goog/typeOf","cljs.core/missing-protocol","re-view.hiccup.hiccup/parse-key-memoized","_","G__15415","vec__15409","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","vec__15412","re-view.hiccup.core/IEmitHiccup","G__15421","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","re-view.hiccup.core/to-element","re-view.hiccup.core/to-hiccup","this","cljs.core/enable-console-print!","re-view.hiccup.hiccup/parse-args","*wrap-props*15436","*create-element*15437","re-view.hiccup.hiccup/*wrap-props*","cljs.core/-write","writer","sym","var_args","G__15430","re-view.hiccup.core/element","p__15432","map__15433","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","re-view/hiccup.core.to-hiccup","js/console","G__15420"],"sourcesContent":["(ns re-view.hiccup.core\n  (:require [re-view.hiccup.hiccup :as hiccup]))\n\n(enable-console-print!)\n(set! *warn-on-infer* true)\n\n;; patch IPrintWithWriter to print javascript symbols without throwing errors\n(when (exists? js/Symbol)\n  (extend-protocol IPrintWithWriter\n    js/Symbol\n    (-pr-writer [sym writer _]\n      (-write writer (str \"\\\"\" (.toString sym) \"\\\"\")))))\n\n(defprotocol IElement\n  (to-element [this] \"Returns a React element representing `this`\"))\n\n(defprotocol IEmitHiccup\n  (to-hiccup [this] \"Returns a hiccup form representing `this`\"))\n\n(defn -to-element [form]\n  (cond (vector? form)\n        (try\n          (let [[_ tag id classes] (hiccup/parse-key-memoized (form 0))\n                [props children] (hiccup/parse-args form)\n                args (hiccup/reduce-flatten-seqs -to-element [tag (hiccup/props->js tag id classes props)] children)]\n            (apply hiccup/*create-element* args))\n\n          (catch js/Error e\n            (println \"Error in render-hiccup-node:\")\n            (println form)\n            (.error js/console e)))\n\n\n        (satisfies? IElement form)\n        (to-element form)\n\n        (satisfies? IEmitHiccup form)\n        (-to-element (to-hiccup form))\n\n        (list? form)\n        (reduce (fn [out el]\n                  (doto out (.push (-to-element el)))) #js [] form)\n\n        :else form))\n\n(defn element\n  \"Converts Hiccup form into a React element. If a non-vector form\n   is supplied, it is returned untouched. Attribute and style keys\n   are converted from `dashed-names` to `camelCase` as spec'd by React.\n\n   - optional -\n   :wrap-props (fn) is applied to all props maps during parsing.\n   :create-element (fn) overrides React.createElement.\"\n  ([form]\n   (-to-element form))\n  ([form {:keys [wrap-props\n                 create-element]}]\n   (binding [hiccup/*wrap-props* wrap-props\n             hiccup/*create-element* (or hiccup/*create-element* create-element)]\n     (-to-element form))))"]}