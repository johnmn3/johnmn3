["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_db/patterns.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",19],"~:shadow/protocol-prefixes",["~#set",["re-db$patterns$IPatternListen$"]],"~:use-macros",null,"~:excludes",["^9",[]],"~:name","~$re-db.patterns","~:imports",null,"~:requires",["^ ","~$cljs.core","^@","~$goog","^A"],"~:seen",["^9",[]],"~:shadow/js-access-global",["^9",["Error"]],"~:uses",null,"~:defs",["^ ","~$remove-value",["^ ","~:protocol-inline",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",34,"^5",7,"^6",34,"^7",19,"~:arglists",["~#list",["~$quote",["^I",[["~$value-map","~$pattern-key","~$pattern","~$value"]]]]],"~:doc","Removes value associated with pattern in value-map."],"^<","~$re-db.patterns/remove-value","~:variadic",false,"^3","re_db/patterns.cljs","^7",19,"~:method-params",["^I",[["^K","^L","^M","^N"]]],"~:protocol-impl",null,"~:arglists-meta",["^I",[null,null]],"^5",1,"^4",34,"^6",34,"~:max-fixed-arity",4,"~:fn-var",true,"^H",["^I",["^J",["^I",[["^K","^L","^M","^N"]]]]],"^O","Removes value associated with pattern in value-map."],"~$datom-patterns",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",114,"^5",7,"^6",114,"^7",21,"^H",["^I",["^J",["^I",[["~$datoms","~$many?"],["^X","^Y","~$pattern-keys"]]]]],"^O","Returns a map of patterns matched by a list of datoms.\n  Limits patterns to those listed in pattern-keys.\n  many? should return true for attributes which have schema value :db.cardinality/many?.","~:top-fn",["^ ","^Q",false,"^U",3,"^R",["^I",[["^X","^Y"],["^X","^Y","^Z"]]],"^H",["^I",[["^X","^Y"],["^X","^Y","^Z"]]],"^T",["^I",[null,null]]]],"^<","~$re-db.patterns/datom-patterns","^Q",false,"^3","re_db/patterns.cljs","^7",21,"^[",["^ ","^Q",false,"^U",3,"^R",["^I",[["^X","^Y"],["^X","^Y","^Z"]]],"^H",["^I",[["^X","^Y"],["^X","^Y","^Z"]]],"^T",["^I",[null,null]]],"^R",["^I",[["^X","^Y"],["^X","^Y","^Z"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",114,"^6",114,"^U",3,"^V",true,"^H",["^I",[["^X","^Y"],["^X","^Y","^Z"]]],"^O","Returns a map of patterns matched by a list of datoms.\n  Limits patterns to those listed in pattern-keys.\n  many? should return true for attributes which have schema value :db.cardinality/many?."],"~$unlisten",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",97,"^5",7,"^6",97,"^7",15,"^H",["^I",["^J",["^I",[["~$db","~$patterns","^N"]]]]],"^O","Removes pattern listener."],"^<","~$re-db.patterns/unlisten","^Q",false,"^3","re_db/patterns.cljs","^7",15,"^R",["^I",[["^12","^13","^N"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",97,"^6",97,"^U",3,"^V",true,"^H",["^I",["^J",["^I",[["^12","^13","^N"]]]]],"^O","Removes pattern listener."],"~$reaction",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",158,"^5",4,"^6",158,"^7",12,"~:protocol","~$re-db.patterns/IPatternListen","^O","the action to take when a listened pattern matches","^H",["^I",["^J",["^I",[["~$this"]]]]]],"^16","^17","^<","~$re-db.patterns/reaction","^Q",false,"^3","re_db/patterns.cljs","^7",12,"^R",["^I",[["^18"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",157,"^6",158,"^U",1,"^V",true,"^H",["^I",["^J",["^I",[["^18"]]]]],"^O","the action to take when a listened pattern matches"],"~$listen-lookup-ref",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",47,"^5",7,"^6",47,"^7",24,"^H",["^I",["^J",["^I",[[["~$lookup-attr","~$lookup-val","~:as","~$lookup-ref"],"~$kind","^M","~$listeners","^12","~$f"]]]]],"^O","Adds lookup ref listener, which uses an intermediate listener to update when\n  the target of a lookup ref changes."],"^<","~$re-db.patterns/listen-lookup-ref","^Q",false,"^3","re_db/patterns.cljs","^7",24,"^R",["^I",[["~$p__15353","^1?","^M","^1@","^12","~$f"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",47,"^6",47,"^U",6,"^V",true,"^H",["^I",["^J",["^I",[[["^1;","^1<","^1=","^1>"],"^1?","^M","^1@","^12","~$f"]]]]],"^O","Adds lookup ref listener, which uses an intermediate listener to update when\n  the target of a lookup ref changes."],"~$non-empty-keys",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",107,"^5",7,"^6",107,"^7",21,"^H",["^I",["^J",["^I",[["~$m"]]]]],"^O","Returns list of keys for which map contains a non-empty value."],"^<","~$re-db.patterns/non-empty-keys","^Q",false,"^3","re_db/patterns.cljs","^7",21,"^R",["^I",[["~$m"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",107,"^6",107,"^U",1,"^V",true,"^H",["^I",["^J",["^I",[["~$m"]]]]],"^O","Returns list of keys for which map contains a non-empty value."],"~$IPatternListen",["^ ","^2",["^ ","~:protocol-symbol",true,"^3","re_db/patterns.cljs","^7",28,"^5",14,"^4",157,"~:protocol-info",["^ ","~:methods",["^ ","^15",[["^18"]],"^13",[["^18"]]]],"^6",157,"^O",null,"~:jsdoc",["^I",["@interface"]]],"^1F",true,"^<","^17","^3","re_db/patterns.cljs","^7",28,"^5",1,"^4",157,"^1G",["^ ","^1H",["^ ","^15",[["^18"]],"^13",[["^18"]]]],"~:info",null,"^6",157,"~:tag","~$any","~:impls",["^9",[]],"^O",null,"^1I",["^I",["@interface"]]],"~$empty-pattern-map",["^ ","^2",["^ ","^3","re_db/patterns.cljs","^4",8,"^5",16,"^6",8,"^7",33,"~:private",true],"^1O",true,"^<","~$re-db.patterns/empty-pattern-map","^3","re_db/patterns.cljs","^7",33,"^5",1,"^4",8,"^6",8,"^1K","~$cljs.core/IMap","^O","Map for building sets of patterns."],"~$*pattern-log*",["^ ","^2",["^ ","^3","re_db/patterns.cljs","^4",3,"^5",16,"^6",3,"^7",29,"~:dynamic",true],"^<","~$re-db.patterns/*pattern-log*","^3","re_db/patterns.cljs","^7",29,"^5",1,"^1S",true,"^4",3,"^6",3,"^1K","~$clj-nil","^O","Dynamic var used in conjunction with re-db.patterns/capture-patterns macro to\n  identify patterns read by a block of code."],"~$supported-pattern-keys",["^ ","^<","~$re-db.patterns/supported-pattern-keys","^3","re_db/patterns.cljs","^4",15,"^5",1,"^6",15,"^7",28,"^2",["^ ","^3","re_db/patterns.cljs","^4",15,"^5",6,"^6",15,"^7",28],"^1K","^1L"],"~$conj-set",["^ ","^<","~$re-db.patterns/conj-set","^3","re_db/patterns.cljs","^4",17,"^5",1,"^6",17,"^7",14,"^2",["^ ","^3","re_db/patterns.cljs","^4",17,"^5",6,"^6",17,"^7",14],"^1K","^1L"],"^13",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",159,"^5",4,"^6",159,"^7",12,"^16","^17","^O","Return the patterns currently listened to","^H",["^I",["^J",["^I",[["^18"]]]]]],"^16","^17","^<","~$re-db.patterns/patterns","^Q",false,"^3","re_db/patterns.cljs","^7",12,"^R",["^I",[["^18"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",157,"^6",159,"^U",1,"^V",true,"^H",["^I",["^J",["^I",[["^18"]]]]],"^O","Return the patterns currently listened to"],"~$lookup-ref?",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",77,"^5",7,"^6",77,"^7",18,"^H",["^I",["^J",["^I",[["^1?","^M"]]]]],"^O","Returns true if pattern has lookup ref in id position."],"^<","~$re-db.patterns/lookup-ref?","^Q",false,"^3","re_db/patterns.cljs","^7",18,"^R",["^I",[["^1?","^M"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",77,"^6",77,"^U",2,"^V",true,"^H",["^I",["^J",["^I",[["^1?","^M"]]]]],"^O","Returns true if pattern has lookup ref in id position."],"~$into-set",["^ ","^<","~$re-db.patterns/into-set","^3","re_db/patterns.cljs","^4",18,"^5",1,"^6",18,"^7",14,"^2",["^ ","^3","re_db/patterns.cljs","^4",18,"^5",6,"^6",18,"^7",14],"^1K","^1L"],"~$pattern-values",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",134,"^5",7,"^6",134,"^7",21,"^H",["^I",["^J",["^I",[["~$pattern-map","^K"]]]]],"^O","Returns values associated with patterns.\n\n  value-map is of form {<pattern-key> {<pattern> #{...set of values...}}}.\n  pattern-map is of form {<pattern-key> #{...set of patterns...}}"],"^<","~$re-db.patterns/pattern-values","^Q",false,"^3","re_db/patterns.cljs","^7",21,"^R",["^I",[["^24","^K"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",134,"^6",134,"^U",2,"^V",true,"^H",["^I",["^J",["^I",[["^24","^K"]]]]],"^O","Returns values associated with patterns.\n\n  value-map is of form {<pattern-key> {<pattern> #{...set of values...}}}.\n  pattern-map is of form {<pattern-key> #{...set of patterns...}}"],"~$unlisten-lookup-ref",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",68,"^5",7,"^6",68,"^7",26,"^H",["^I",["^J",["^I",[["^1>","^1?","^M","^1@","^12","~$f"]]]]],"^O","Removes lookup ref listener."],"^<","~$re-db.patterns/unlisten-lookup-ref","^Q",false,"^3","re_db/patterns.cljs","^7",26,"^R",["^I",[["^1>","^1?","^M","^1@","^12","~$f"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",68,"^6",68,"^U",6,"^V",true,"^H",["^I",["^J",["^I",[["^1>","^1?","^M","^1@","^12","~$f"]]]]],"^O","Removes lookup ref listener."],"~$add-value",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",29,"^5",7,"^6",29,"^7",16,"^H",["^I",["^J",["^I",[["^K","^L","^M","^N"]]]]],"^O","Associates value with pattern in value-map."],"^<","~$re-db.patterns/add-value","^Q",false,"^3","re_db/patterns.cljs","^7",16,"^R",["^I",[["^K","^L","^M","^N"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",29,"^6",29,"^U",4,"^V",true,"^H",["^I",["^J",["^I",[["^K","^L","^M","^N"]]]]],"^O","Associates value with pattern in value-map."],"~$datom-values",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",144,"^5",7,"^6",144,"^7",19,"^H",["^I",["^J",["^I",[["^K","^X","^Y"]]]]],"^O","Returns the set of values in value-map associated with patterns matched by datoms."],"^<","~$re-db.patterns/datom-values","^Q",false,"^3","re_db/patterns.cljs","^7",19,"^R",["^I",[["^K","^X","^Y"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",144,"^6",144,"^U",3,"^V",true,"^H",["^I",["^J",["^I",[["^K","^X","^Y"]]]]],"^O","Returns the set of values in value-map associated with patterns matched by datoms."],"~$resolve-id",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",41,"^5",7,"^6",41,"^7",17,"^H",["^I",["^J",["^I",[["~$db-snap","~$attr","~$val"]]]]],"^O","Copied from re-db.core."],"^<","~$re-db.patterns/resolve-id","^Q",false,"^3","re_db/patterns.cljs","^7",17,"^R",["^I",[["^2=","^2>","^2?"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",41,"^6",41,"^U",3,"^V",true,"^H",["^I",["^J",["^I",[["^2=","^2>","^2?"]]]]],"^O","Copied from re-db.core."],"~$invalidate!",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",151,"^5",7,"^6",151,"^7",18,"^H",["^I",["^J",["^I",[["^12","^L","^M"]]]]],"^O","Invalidate a pattern, ie. invoke callbacks that match pattern"],"^<","~$re-db.patterns/invalidate!","^Q",false,"^3","re_db/patterns.cljs","^7",18,"^R",["^I",[["^12","^L","^M"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",151,"^6",151,"^U",3,"^V",true,"^H",["^I",["^J",["^I",[["^12","^L","^M"]]]]],"^O","Invalidate a pattern, ie. invoke callbacks that match pattern"],"~$listen",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",87,"^5",7,"^6",87,"^7",13,"^H",["^I",["^J",["^I",[["^12","^13","^N"]]]]],"^O","Adds pattern listener."],"^<","~$re-db.patterns/listen","^Q",false,"^3","re_db/patterns.cljs","^7",13,"^R",["^I",[["^12","^13","^N"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",87,"^6",87,"^U",3,"^V",true,"^H",["^I",["^J",["^I",[["^12","^13","^N"]]]]],"^O","Adds pattern listener."],"~$log-read",["^ ","^G",null,"^2",["^ ","^3","re_db/patterns.cljs","^4",20,"^5",7,"^6",20,"^7",15,"^H",["^I",["^J",["^I",[["^1?","^M"],["^1?","^M","~$multiple?"]]]]],"^O","Record pattern to *pattern-log*.","^[",["^ ","^Q",false,"^U",3,"^R",["^I",[["^1?","^M"],["^1?","^M","^2F"]]],"^H",["^I",[["^1?","^M"],["^1?","^M","^2F"]]],"^T",["^I",[null,null]]]],"^<","~$re-db.patterns/log-read","^Q",false,"^3","re_db/patterns.cljs","^7",15,"^[",["^ ","^Q",false,"^U",3,"^R",["^I",[["^1?","^M"],["^1?","^M","^2F"]]],"^H",["^I",[["^1?","^M"],["^1?","^M","^2F"]]],"^T",["^I",[null,null]]],"^R",["^I",[["^1?","^M"],["^1?","^M","^2F"]]],"^S",null,"^T",["^I",[null,null]],"^5",1,"^4",20,"^6",20,"^U",3,"^V",true,"^H",["^I",[["^1?","^M"],["^1?","^M","^2F"]]],"^O","Record pattern to *pattern-log*."]],"~:require-macros",["^ ","^@","^@"],"~:cljs.analyzer/constants",["^ ","^B",["^9",["~:_a_","~:lookup-cb","~:e__","~:db-after","~:_av","~:ave","~:lookup-refs","~:ea_","~:lookup-target","~:listeners"]],"~:order",["^2L","^2J","^2N","^2Q","^2O","^2M","^2P","^2K","^2R","^2S"]],"~:flags",["^ "],"~:js-deps",["^ "],"~:deps",["^A","^@"]]