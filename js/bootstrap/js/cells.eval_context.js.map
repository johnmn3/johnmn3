{"version":3,"file":"cells.eval_context.js","sources":["cells/eval_context.cljs"],"mappings":"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","names":["cells.eval-context/-dispose!","context","f","this","e","cljs.core/-vreset!","cljs.core/-deref","-context-state","cljs.core.update.cljs$core$IFn$_invoke$arity$4","cljs.core/conj","x__4243__auto__","m__4244__auto__","cells/eval-context.handle-error","goog/typeOf","cljs.core/missing-protocol","cells.eval-context/IHandleError","cells.eval-context/on-dispose","cljs.core.update.cljs$core$IFn$_invoke$arity$3","cljs.core/empty","cljs.core/volatile!","cells/eval-context.on-dispose","cells/eval-context.-dispose!","cells.eval-context/IDispose","seq__15193","cljs.core/seq","chunk__15194","count__15195","i__15196","temp__5457__auto__","cljs.core/chunked-seq?","c__4351__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","cljs.core/deref","value","cells.eval-context/dispose!","cells.eval-context/handle-error","cells.eval-context/new-context","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","js/cells","js/cells.eval-context","js/cells.eval-context.t_cells$eval_context15186","cells.eval-context/t_cells$eval_context15186","_15188","meta15187","this__4192__auto__","writer__4193__auto__","opt__4194__auto__","cljs.core/-write","cells.eval-context/->t_cells$eval_context15186"],"sourcesContent":["(ns cells.eval-context)\n\n(defprotocol IDispose\n  \"Cells are designed to be used within interactive interfaces where users re-evaluate\n   code frequently. Implement the IDispose protocol on an editor context to control the\n    'disposal' of side-effects like intervals when code is (re)-evaluated.\"\n  (on-dispose [context f] \"Register a callback to be fired when context is disposed.\")\n  (-dispose! [context]))\n\n(defn dispose! [value]\n  (when (satisfies? IDispose value)\n    (-dispose! value)))\n\n(defprotocol IHandleError\n  (handle-error [this e]))\n\n(defn new-context []\n  (let [-context-state (volatile! {:dispose-fns #{}})]\n    (reify\n      IDispose\n      (on-dispose [context f]\n        (vswap! -context-state update :dispose-fns conj f))\n      (-dispose! [context]\n        (doseq [f (:dispose-fns @-context-state)]\n          (f))\n        (vswap! -context-state update :dispose-fns empty))\n      IHandleError\n      (handle-error [this e] (throw e)))))"]}